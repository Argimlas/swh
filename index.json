[{"content":"In the lecture parts of microcontrollers we got introduced to the Arduino-Ecosystem of boards and shields. Then we learned about board features, as well as the Arduino IDE and the basics of Serial Communication.\nLab # In the lab part we then experimented hands-on with microctontrollers and different sensors, to get a feeling for everything.\nWeek 1: Controlling LEDs with a Hall-Sensor and a LDR-Sensor, PlatformIO # In the first lab I tried some different sensors by controlling the LED-state with them and switched from the Arduino IDE to PlatformIO, a Visual Studio Code extension for working with Arduino, as well as ESP-Boards.\nHall- and LDR-Sensor:\nA Hall-Sensor reacts to a megnetic field which then can be read by a microcontroller. The LDR-Sensor works similar only that it reacts to a change of brightness instead to a magnetic field.\nCircuit:\nResistors for the LEDs: 220 ohm Resistor for the Hall-Sensor: 10k ohm\nCode:\n#define PIN_HALL_SENSOR 14 //Hall-Sensor #define PIN_LED1 12 #define PIN_PHOTO_RESISTOR A0 //LDR-Sensor #define PIN_LED2 13 int brightness = 0; void setup() { pinMode(PIN_HALL_SENSOR, INPUT); pinMode(PIN_LED1, OUTPUT); pinMode(PIN_LED2, OUTPUT); Serial.begin(9600); } void loop() { //Set LED to read value of LDR-Sensor digitalWrite(PIN_LED1, digitalRead(PIN_HALL_SENSOR)); brightness = analogRead(PIN_PHOTO_RESISTOR); Serial.println(\u0026#34;Hall: \u0026#34;); Serial.println(digitalRead(PIN_HALL_SENSOR)); Serial.println(\u0026#34;LDR: \u0026#34;); Serial.println(brightness); if (brightness \u0026lt; 600) { digitalWrite(PIN_LED2, HIGH); } else { digitalWrite(PIN_LED2, LOW); } } Magnet on Hall-Sensor (LED1 is turned off), LDR-Sensor in room-light (LED2 is turned off). Hall-Sensor without magnet (LED1 is turned on), LDR-Sensor covered (LED2 is turned on) Week 2: Wifi, Servo-Motor controlled via the Blynk-App # First I turned on and off a LED over WIFI with a D1 Mini and after that I tried the Blynk App to controll a servo over my phone, you can see the code below.\nCode:\n#define BLYNK_TEMPLATE_ID \u0026#34;xxx\u0026#34; #define BLYNK_DEVICE_NAME \u0026#34;xxx\u0026#34; #define BLYNK_AUTH_TOKEN \u0026#34;xxx\u0026#34; #define BLYNK_PRINT Serial #include \u0026lt;ESP8266WiFi.h\u0026gt; #include \u0026lt;BlynkSimpleEsp8266.h\u0026gt; #include \u0026lt;Servo.h\u0026gt; Servo servo1; char auth[] = BLYNK_AUTH_TOKEN; // Your WiFi credentials. // Set password to \u0026#34;\u0026#34; for open networks. char ssid[] = \u0026#34;\u0026#34;; char pass[] = \u0026#34;\u0026#34;; BlynkTimer timer; // This function is called every time the Virtual Pin 0 state changes BLYNK_WRITE(V0) { // Set incoming value from pin V0 to a variable int value = param.asInt(); Serial.println(value); if (value == 1) { servo1.write(-90); } else { servo1.write(90); } // Update state Blynk.virtualWrite(V1, value); } // This function is called every time the device is connected to the Blynk.Cloud BLYNK_CONNECTED() { // Change Web Link Button message to \u0026#34;Congratulations!\u0026#34; Blynk.setProperty(V3, \u0026#34;offImageUrl\u0026#34;, \u0026#34;https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations.png\u0026#34;); Blynk.setProperty(V3, \u0026#34;onImageUrl\u0026#34;, \u0026#34;https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations_pressed.png\u0026#34;); Blynk.setProperty(V3, \u0026#34;url\u0026#34;, \u0026#34;https://docs.blynk.io/en/getting-started/what-do-i-need-to-blynk/how-quickstart-device-was-made\u0026#34;); } // This function sends Arduino\u0026#39;s uptime every second to Virtual Pin 2. void myTimerEvent() { // You can send any value at any time. // Please don\u0026#39;t send more that 10 values per second. Blynk.virtualWrite(V2, millis() / 1000); } void setup() { // Debug console servo1.attach(D6); Serial.begin(9600); Blynk.begin(auth, ssid, pass); // You can also specify server: //Blynk.begin(auth, ssid, pass, \u0026#34;blynk.cloud\u0026#34;, 80); //Blynk.begin(auth, ssid, pass, IPAddress(192,168,1,100), 8080); // Setup a function to be called every second timer.setInterval(1000L, myTimerEvent); } void loop() { Blynk.run(); timer.run(); // You can inject your own code or combine it with other sketches. // Check other examples on how to communicate with Blynk. Remember // to avoid delay() function! } Here you can see the circuit:\nWeek 3: External Interrupt # In this week I tried external Interrupts, they are helpfull to monitor (user-)input and react to them. The Interrupt Service Routine (ISR) is a callback function with 4 modes:\nLow: Interrupt is triggered if pin is low Change: Interrupt is triggered if pin state changes Rising: Interrupt is triggered if pin switches from low to high Falling: Interrupt is triggered if pin switches from high to low High: Interrupt is triggered if pin is high My idea of using external interrupts was to have two LEDs, of whom one is green and shows that everything works OK and the other one is red and starts blinking if there is a problem. In my case the \u0026ldquo;problem\u0026rdquo; gets triggered by a button, after which the green LED turns of and the red one start blinking. If the button gets pressed again the problem is \u0026ldquo;solved\u0026rdquo;, the red LED truns off and the green one is on again.\nHere you can see the code, I used the \u0026ldquo;change\u0026rdquo;- mode for the ISR:\nconst int ledPin1 = 12; //Grüne LED const int ledPin2 = 11; //Rote LED const int buttonPin = 2; //Interrupt Button int x=0, y=0; //Variablen zum Hochzählen int ledToggle1 = HIGH; //Zustand Grüne LED int ledToggle2 = LOW; // Zustand Rote LED für Interrupt //Variablen um timing der Interrupts festzustellen unsigned long button_time = 0; unsigned long last_button_time = 0; int ledState = LOW; //Zustand Rote LED für Blinken //Variable zum Blinken der Roten LED unsigned long previousMillis = 0; const long interval = 250; //Blink delay der Roten LED void button_ISR(){ button_time = millis(); //check to see if increment() was called in the last 250 milliseconds if (button_time - last_button_time \u0026gt; 250){ Serial.print(\u0026#34;Interrupt \u0026#34;); Serial.print(y++); Serial.println(); ledToggle1 = !ledToggle1; digitalWrite(ledPin1, ledToggle1); ledToggle2 = !ledToggle2; digitalWrite(ledPin2, ledToggle2); last_button_time = button_time; } } void setup() { pinMode(ledPin1, OUTPUT); pinMode(ledPin2, OUTPUT); pinMode(buttonPin, INPUT_PULLUP); Serial.begin(9600); attachInterrupt(digitalPinToInterrupt(buttonPin), button_ISR, CHANGE); digitalWrite(ledPin1, HIGH); } void loop(){ Serial.print(\u0026#34;loop \u0026#34; ); Serial.print(x++ ); Serial.println(); unsigned long currentMillis = millis(); if (y%2==1){ if (currentMillis - previousMillis \u0026gt;= interval) { // save the last time you blinked the LED previousMillis = currentMillis; // if the LED is off turn it on and vice-versa: if (ledState == LOW) { ledState = HIGH; } else { ledState = LOW; } // set the LED with the ledState of the variable: digitalWrite(ledPin2, ledState); } } } Circuit:\nHere you can see everything in action:\n","date":"6 December 2022","permalink":"/swh/posts/microcontroller/","section":"Posts","summary":"In the lecture parts of microcontrollers we got introduced to the Arduino-Ecosystem of boards and shields. Then we learned about board features, as well as the Arduino IDE and the basics of Serial Communication.","title":"Microcontroller"},{"content":"","date":"6 December 2022","permalink":"/swh/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"On this site I will document the progress of my DIY-project in the subject \u0026ldquo;Sketching with Hardware\u0026rdquo; at Institute of Media Informatics at Ulm University.\n","date":"6 December 2022","permalink":"/swh/","section":"Sketching with Hardware","summary":"On this site I will document the progress of my DIY-project in the subject \u0026ldquo;Sketching with Hardware\u0026rdquo; at Institute of Media Informatics at Ulm University.","title":"Sketching with Hardware"},{"content":"In the lecture part of the electrical engineering-lab we learned about the basic formulas and units of electrical engineering, how to use resistors and got introduced to some basic circuits like series- and parallel-circuits. We also got introduced in a lot of components which we might need later in our projects.\nLab # In the lab part we then put some of the principles we learned to practise.\nSoldering # First we soldered some components which was nothing new to me but still entertaning since my soldering-iron at home isn\u0026rsquo;t that advanced.\nThe row on the left and the two pins at the bottom are my soldering result.\nCircuit with voltag and current measurement # Next we built a small circuit and measured the voltage and current on it to calculate and plot the value of the resistor we used while changing the voltage.\nAs you can see in the picture above we accidentally burned a resistor.\nThe circuit was the following:\nVoltage is measured in parallel Current is measured in series In this picture you can see the multimeter measuring the current in series as well as the power supply in the back. Unfortunately we firstly plugged the multimeter wrong as you can see in the picture, we later realised it because we got wrong numbers in our plot of the resistance.\nThis part was nothing new for me either because i had electrical engineering in school for 3 years and also measure stuff at home for own projects.\nProject # I chose the project \u0026ldquo;rc-car\u0026rdquo; since I like to build rc-cars out of lego technic in my free time, I figured it would be an interesting challenge to built a car even more from scratch than with lego.\nIn the picture below you can see my first try on a circuit for a simple rc-car with left- and right-indicators.\nServo for steering DC-motor for acceleration (the circuit enables forward and backward driving as well as pwm control) 2 times 2 LEDs in series for the left- and the right-indicator Bluetooth-module for rc control via a phone ","date":"15 November 2022","permalink":"/swh/posts/electrical-engineering/","section":"Posts","summary":"In the lecture part of the electrical engineering-lab we learned about the basic formulas and units of electrical engineering, how to use resistors and got introduced to some basic circuits like series- and parallel-circuits.","title":"Electrical Engineering"},{"content":"Hey, I\u0026rsquo;m Jakob!\nI study Media Informatics at Ulm University in my 5th semester (at the time of this post). In my free time I like to do sports, build stuff out of wood and design my own Lego Technic RC-Cars.\nBy attending this subject I hope to extend my knowledge about microcontrollers and modeling in 3D. Furthermore I\u0026rsquo;m looking forward to learn how to use a 3D-Printer, CNC and a Laser-Cutter for the first time.\nI chose this subject because I\u0026rsquo;m generally interested building DIY stuff and for school I did a microcontroller-project in which i tried to build a RC-Car with automatic differential-locks. The car worked more or less and with this subject I hope to clear some difficulties I faced in this project.\nIf I had all the tools and abilitys I need, I would like to build a reciever to start my PC over my phone and a button build Into my desk which turns on my power strip via a relay as well as my PC simultaneously. All the stuff could be hidden underneath my small shelf on which my screens are standing behind a laser-cutted IO-shield\n","date":"5 November 2022","permalink":"/swh/posts/introduction/","section":"Posts","summary":"Hey, I\u0026rsquo;m Jakob!\nI study Media Informatics at Ulm University in my 5th semester (at the time of this post). In my free time I like to do sports, build stuff out of wood and design my own Lego Technic RC-Cars.","title":"First Post - Introduction"},{"content":"","date":"1 January 0001","permalink":"/swh/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/swh/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/swh/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"1 January 0001","permalink":"/swh/tags/","section":"Tags","summary":"","title":"Tags"}]