[{"content":"I really wanted to write a documentation/building-instructions for my exercise project so here it is!\nParts and devices you need # I, unfortunately for probably most, use an iPhone so this instruction is for iPhone only, though it should not be a problem or even easier to do this via android.\nNow to the Hardware you need:\n1 ESP32 as \u0026ldquo;brain\u0026rdquo; for everything 1 Servo-Motor (SG90 is enough) 1 geared DC-Motor with shaft on both sides like this one 1 Motor shield L298N 2 9V batterys one for the DC-Motor, the other one for the servo and ESP32 DC converter to 5V for the servo and ESP32 screws \u0026amp; nuts TODO: exact sizes TODO lego tires and stangen (vorne \u0026amp; hinten) In terms of devices a 3D printer and a laser cutter is necesary to manufacture the parts for the project.\nManufacturing # For Manufacturing I decided to use 3D printing and laser-cutting. First of all to learn about both of those production methods and to safe time, because big flat surfaces are faster laser cutted and specific more plastic parts are easier to produce with a 3D-printer.\nNote: You can also find all files for he project here.\nLaser-Cutting # The base of the car as well as the body of the car are 3d printed because I just need big flat surfaces with cutouts to creat them.\nBase # The base of the car is quite simple and everything gets attached to it.\nLower sides of the car # Upper part of the car # 3D Printing # TODO insert short introduction\nSteering axle # TODO insert complete picture\nRear axle # TODO insert picture\nCode \u0026amp; App # Known Problems and improvements # ","date":"2 June 2023","permalink":"/swh/posts/instructions-exercise-project/","section":"Posts","summary":"I really wanted to write a documentation/building-instructions for my exercise project so here it is!\nParts and devices you need # I, unfortunately for probably most, use an iPhone so this instruction is for iPhone only, though it should not be a problem or even easier to do this via android.","title":"Instructions for Exercise Project"},{"content":"","date":"2 June 2023","permalink":"/swh/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"On this site I will document the progress of my DIY-project in the subject \u0026ldquo;Sketching with Hardware\u0026rdquo; at Institute of Media Informatics at Ulm University.\n","date":"2 June 2023","permalink":"/swh/","section":"Sketching with Hardware","summary":"On this site I will document the progress of my DIY-project in the subject \u0026ldquo;Sketching with Hardware\u0026rdquo; at Institute of Media Informatics at Ulm University.","title":"Sketching with Hardware"},{"content":" Presentation # We had a small fair to present our projects. Everyone of us got a small space at a table with our posters behind it to present our project to interested people that were invited.\nEveryone who came to my project was really interested and asked detailed questions about it, which made the overall presentation pretty enjoyable.\nI remember the following questions:\nDid I designed everything (laser-cutted and 3D-printed parts) for the project myself?\nYes I did.\nDid I use bluetooth or wifi to controll the car?\nBluetooth.\nDid I programm the bluetooth app myself?\nNo I did not.\nWhat was the most challenging part of my project?\nDefinitely designing the steering mechanism. It involved a lot of measuring and several tries to print all the interlocking parts.\nWhat the various electronic components in my project are responsible for.\nESP32 development board as a microcontorller Servo for stearing DC-motor for acceleration Two 9V blocks for power Voltage converter to get the 9V down to 5V for the microcontroller Motor driver to controll the DC-motor How many motors did I use?\nTwo (Servo for steering and DC-motor for acceleration).\nIn general the feedback to my project was really positive and with some visitors I talked about further improvements I wanted to add to the car, like lights for example.\nReview of the semester # Looking back over the first semester of sketching with hardware I had a lot of fun in this module. I learned a lot of new things like mainly 3D-printing and laser-cutting and also gained a lot of experince in those two manufacturing preocesses through the exercise project.\nIn the fields electrical engineering, microcontrollers and mechanics, I already had a lot of knowledge beforehand but still learned some new things that were pretty interesting.\nI think it would be pretty good to learn about the differnt manufacturing processes like 3D-printing and laser cutting a little earlier in the semester. That way it would be possible to start working on the exercise project earlier because for my project 3D-printing and laser-cutting needed the most time and intersected a little with my exam phase.\nProgress over the semester # In the beginning of the Semester we had to make a presentation about a DIY project which we thought would be interesting.\nI took a project from Stuff Made Here:\nI wrote the following about, if I could do the project:\nI think after this semester I definitely gained a lot of experience so that this project is even easier to implement.\nNow I know how to use a 3D-printer, so the manufacturing process should be a lot easier then before the semester. My exercise project didn\u0026rsquo;t involved a lot of programming so that still would be a challenge but I also communicated with a apple device so there is a little progress as well.\nNext semester # I am really looking forward to the next semester and working on a bigger project with also a lot more time for it.\nI don\u0026rsquo;t really know yet what my project for the second semester will be but I think an autonomous driving car, or a app with which I can controll all the lights of my lego models would be interesting to make. Another cool project would be to motorise the manual function of height adjusting my desk which would be controlled via wifi over a website to safe different prefered heights, etc.\n","date":"28 February 2023","permalink":"/swh/posts/exercise-project/","section":"Posts","summary":"Presentation # We had a small fair to present our projects. Everyone of us got a small space at a table with our posters behind it to present our project to interested people that were invited.","title":"Exercise Project"},{"content":"In the lecture part we first got introduced to the different types of 3D-printers namely SLA-, FDM-, SLS- and SPD-printers.\nThe process to a finished print generally starts from an idea and measures which is followed by 3D-modeling, the finished model then gets exported as a mesh, after that sliced to GCode which 3D-printers understand. GCode basically is the model sliced into a lot of layers which when printed ontop of each other build the model again.\nFused Deposition Modeling (FDM) # FDM-printing is the cheapest way of 3D printing and this more common used in a private environment. The quality and details of this type of printer is badder compared to other types of printers. It works heating up Filament and depositting it through a nozzle onto a print-bed.\nUltimaker 2+ (Left), Snapmaker original (right) Ultimaker 2+ printing Finished print on the snapmaker original Stereolithography (SLA) and Digital Light Procressing (DLP) # SLA-printing uses a laser and a specific liquid (resin) to create 3D-structures. The Laser hits and because of that hardens the liquid only on the spots where a structure is supposed to be. This gets repeated layer for layer.\nDLP-printing works similary to SLA-printing.\nSelective Laser Sintering (SLS) # For SLS-printing a powder is used which then gets hardend by a laser. It has pretty good mechanical properties and because of the powder no support structures for overhangs are needed. Unfortunately it only available for industry.\nSelective Powder Deposition (SPD) # SPD-printing works similary to SLS-printing, its also possible to print metals. Currently not very common.\nCAD- vs. mesh-software # Mesh-software should only be used to create 3D-models for organic sturctures like figurines because it does not offer the best dimensional accuracy. With CAD-software on the other hand it is possible to create accurately measured 3D-models which is usefull if you need parts specifically sized.\nLab # In the MI-Lab we have the following devices avilable:\nCreality CR10 S5 with a 500 mm x 500 mm print-bed ELEGOO MARS 2 Pro which is a SLA-printer Snapmaker Original which is capable of printing, cnc-milling as well as laser engraving Ultimaker Original and Ultimaker 2+ For slicing Ultimaker Original, Ultimaker 2+ as well as Creality CR10 S5 need Cura. The printer Snapmaker Original needs Snapmaker Luban for slicing and ELEGOO MARS 2 Pro needs Chitubox.\nWhen creating 3D-models there is a variety of software available, for example Solidworks and Sketchup which are used by a lot of people, I personally really like to use Autodesk Fusion 360. If you want to create more natural and shapes like figuriens Blender is a popular option to use.\nProblems while printing: # When printing a lot of problems can occur, I personally experienced a clogged nozzle, warping and bad overhangs.\nMy print with bad overhang in the hole My print in which you can see that the nozzle was clogged while printing the bottom part. ","date":"25 February 2023","permalink":"/swh/posts/additive-manufacturing/","section":"Posts","summary":"In the lecture part we first got introduced to the different types of 3D-printers namely SLA-, FDM-, SLS- and SPD-printers.\nThe process to a finished print generally starts from an idea and measures which is followed by 3D-modeling, the finished model then gets exported as a mesh, after that sliced to GCode which 3D-printers understand.","title":"Additive Manufacturing"},{"content":"In the lecture part of subtractive manufacturing we first learned about vector graphics as well as G-Code which is used in a lot of computer guided machines like laser cutters, 3D-printers, etc.\nThen we got an overview of tools to create svg\u0026rsquo;s as well as 3D-models.\nNext we learned about CNC milling and the basics about how it works. We got an introduction into CNC mill bits and learned about problems you have to face with a CNC mill for exampel that it is impossible to make really small sharp inner corners because a mill bit is always round and that the thinness of a wall is limited due to vibration during milling.\nAfter CNC milling we got an introduction to laser cutting and the laser cutter we have in our lab. With a laser-cutter it is possible to cut, engrave as well as mark material. When cutting like it is when sawing wood, material gets removed, which has to be calculated when creating a sketch you want to cut. When designing its usefull tu creat interlocking parts in order to make the final object more stable, its also possible to design bending structures for some really interesting shapes.\nSource: https://www.instructables.com/Curved-laser-bent-wood/\nLastly we learned about safety when working with laser-cutters as well as CNC-mills.\nFor laser-cutters it is important to only use materials which you can find in the manual of the cutter (in our case Emblaser 2). All other materials should not be used to be cut by the laser-cutter especially if you are not sure which material you have infornt of you.\nLab # In the Lab part we then made our first-hand experiences with laser cutting.\nSketching # First we had to sketch our project and parts of it we could potentially cut/make with a laser-cutter.\nSketch 1\nMy plan is to build a rc-car, and the body of it I want to build out of laser-cutted pieces. The car is inspired by a Landrover Defender.\nThe the sketch in the top left corner consists of two pieces which overlapp in order to better glue them together.\nIn the bottom right corner you can see the same two pieces as in the top left corner with a system to connect them even more stable together.\nSketch 2\nHere you can see the second part of my sketch which includes the chassis of my car with some tries on the steering system, everything you can see here has to be 3D-printed.\nCreating a svg # After sketching we went to a tool of our choice, in my case Affinity Designer and designed a small maximum 5x5cm svg to cut with the laser cutter.\nI choosed the top siede-part of my car-body with the windows:\nThe two notches on the bottom are there to connect the part more secure and a test on how thick I have to make a notch in order to interlock it with other parts. The thickness of the material is 3 mm, I went with a notch 2,8 mm wide which worked out perfectly in the end.\nLaser Cutting and Final Part # The final svg then can be loaded into LightBurn.\nIt is important to choose which cuts have to be made first, in my case the windows, because if you cut the outer edge first the whole part would be loose and could slip while cutting the windows. The reason for this is that there is a ventilation system in the Laser-Cutter which vibrates a little.\nHere you can see the cutted piece slotted into the two inner window pieces.\nIn LighBurn its also important to choose the settings for cutting a certain material.\nIn this case we used the preset for our material and modivied it so that the laser makes 3 rounds and also moves down around 1 mm after each round of cutting.\n","date":"28 January 2023","permalink":"/swh/posts/subtractive-manufacturing/","section":"Posts","summary":"In the lecture part of subtractive manufacturing we first learned about vector graphics as well as G-Code which is used in a lot of computer guided machines like laser cutters, 3D-printers, etc.","title":"Subtractive Manufacturing"},{"content":"In the lecture part of mechanics we learnd a little bit about the physical basics and some important formulas regarding them. We got introduced to levers, pulleys, wheels and axles as well as screws and gears. After that the basic functionality of motors got explained and how a dc-motor transforms electrial energy into a rotation. Servo motors and stepper-motors were presented as well. In the robotics part we learned about different kinds of linkages and the resulting kinematics out of linkages. In the end we got introduced to the concept of soft robotics inspired by nature and how to unterstand mechanisms.\nLab # In the lab part we then explored some mechanisms with a \u0026ldquo;Fischertechnik-Baukasten\u0026rdquo;.\nPush crank # First we build a push crank, which transforms a rotational motion into a linear motion. In the other direction this is used in a bike with the pedals transforming linear motion into a rotation.\nManual gearbox with 3 gears # After the push crank we had to build a manual gearbox with 3 gears.\nIn the picture below you can see the 3 different gears and the reverse gear.\nThe gears get switched by putting the lever which you can see the best in picture 4 in different positions.\nThe crank in the top left corner is used to drive the gearbox\nThe small gearwheel drives the bigger one, which results in a slower speed. Two same sized gearwheels are used, the speed stays the same and isn\u0026rsquo;t translated. A big gearwheel drives a smaller one, which results in a higher speed. A third gear is added which results in reversing the direction in which the wheel spins and equals a reverse gear. Differential gear # A differential gear is used to equalize the speed between two parallel tires. This happens when a car drives a curve, because then the inner tire will cover a smaller distance than the outer tire because the radius is smaller.\nPlanetary gear # A planetary gear is basically used like a gearbox and translates speeds as well. You can find it for example in a hub transmission in a bike or to gear vehicles like tractors additionally down.\n","date":"26 January 2023","permalink":"/swh/posts/mechanics/","section":"Posts","summary":"In the lecture part of mechanics we learnd a little bit about the physical basics and some important formulas regarding them. We got introduced to levers, pulleys, wheels and axles as well as screws and gears.","title":"Mechanics"},{"content":"In the lecture parts of microcontrollers we got introduced to the Arduino-Ecosystem of boards and shields. Then we learned about board features, as well as the Arduino IDE and the basics of Serial Communication. I think learning a little about wifi in context with arduino would be interesting, as well as introducing the \u0026ldquo;millis()\u0026rdquo; function instead of \u0026ldquo;delay()\u0026rdquo; because it\u0026rsquo;s really powerful function if you understand it.\nLab # In the lab part we then experimented hands-on with microcontrollers and different sensors, to get a feeling for everything.\nWeek 1: Controlling LEDs with a Hall-Sensor and a LDR-Sensor, PlatformIO # In the first lab I tried some different sensors by controlling the LED-state with them and switched from the Arduino IDE to PlatformIO, a Visual Studio Code extension for working with Arduino, as well as ESP-Boards.\nHall- and LDR-Sensor:\nA Hall-Sensor reacts to a magnetic field which then can be read by a microcontroller. The LDR-Sensor works similar only that it reacts to a change of brightness instead to a magnetic field.\nCircuit:\nResistors for the LEDs: 220 ohm Resistor for the Hall-Sensor: 10k ohm\nCode:\n#define PIN_HALL_SENSOR 14 //Hall-Sensor #define PIN_LED1 12 #define PIN_PHOTO_RESISTOR A0 //LDR-Sensor #define PIN_LED2 13 int brightness = 0; void setup() { pinMode(PIN_HALL_SENSOR, INPUT); pinMode(PIN_LED1, OUTPUT); pinMode(PIN_LED2, OUTPUT); Serial.begin(9600); } void loop() { //Set LED to read value of LDR-Sensor digitalWrite(PIN_LED1, digitalRead(PIN_HALL_SENSOR)); brightness = analogRead(PIN_PHOTO_RESISTOR); Serial.println(\u0026#34;Hall: \u0026#34;); Serial.println(digitalRead(PIN_HALL_SENSOR)); Serial.println(\u0026#34;LDR: \u0026#34;); Serial.println(brightness); if (brightness \u0026lt; 600) { digitalWrite(PIN_LED2, HIGH); } else { digitalWrite(PIN_LED2, LOW); } } Magnet on Hall-Sensor (LED1 is turned off), LDR-Sensor in room-light (LED2 is turned off). Hall-Sensor without magnet (LED1 is turned on), LDR-Sensor covered (LED2 is turned on) Week 2: Wifi, Servo-Motor controlled via the Blynk-App # First I turned on and off a LED over WIFI with a D1 Mini and after that I tried the Blynk App to control a servo over my phone, you can see the code below.\nCode:\n#define BLYNK_TEMPLATE_ID \u0026#34;xxx\u0026#34; #define BLYNK_DEVICE_NAME \u0026#34;xxx\u0026#34; #define BLYNK_AUTH_TOKEN \u0026#34;xxx\u0026#34; #define BLYNK_PRINT Serial #include \u0026lt;ESP8266WiFi.h\u0026gt; #include \u0026lt;BlynkSimpleEsp8266.h\u0026gt; #include \u0026lt;Servo.h\u0026gt; Servo servo1; char auth[] = BLYNK_AUTH_TOKEN; // Your WiFi credentials. // Set password to \u0026#34;\u0026#34; for open networks. char ssid[] = \u0026#34;\u0026#34;; char pass[] = \u0026#34;\u0026#34;; BlynkTimer timer; // This function is called every time the Virtual Pin 0 state changes BLYNK_WRITE(V0) { // Set incoming value from pin V0 to a variable int value = param.asInt(); Serial.println(value); if (value == 1) { servo1.write(-90); } else { servo1.write(90); } // Update state Blynk.virtualWrite(V1, value); } // This function is called every time the device is connected to the Blynk.Cloud BLYNK_CONNECTED() { // Change Web Link Button message to \u0026#34;Congratulations!\u0026#34; Blynk.setProperty(V3, \u0026#34;offImageUrl\u0026#34;, \u0026#34;https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations.png\u0026#34;); Blynk.setProperty(V3, \u0026#34;onImageUrl\u0026#34;, \u0026#34;https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations_pressed.png\u0026#34;); Blynk.setProperty(V3, \u0026#34;url\u0026#34;, \u0026#34;https://docs.blynk.io/en/getting-started/what-do-i-need-to-blynk/how-quickstart-device-was-made\u0026#34;); } // This function sends Arduino\u0026#39;s uptime every second to Virtual Pin 2. void myTimerEvent() { // You can send any value at any time. // Please don\u0026#39;t send more that 10 values per second. Blynk.virtualWrite(V2, millis() / 1000); } void setup() { // Debug console servo1.attach(D6); Serial.begin(9600); Blynk.begin(auth, ssid, pass); // You can also specify server: //Blynk.begin(auth, ssid, pass, \u0026#34;blynk.cloud\u0026#34;, 80); //Blynk.begin(auth, ssid, pass, IPAddress(192,168,1,100), 8080); // Setup a function to be called every second timer.setInterval(1000L, myTimerEvent); } void loop() { Blynk.run(); timer.run(); // You can inject your own code or combine it with other sketches. // Check other examples on how to communicate with Blynk. Remember // to avoid delay() function! } Here you can see the circuit:\nWeek 3: External Interrupt # In this week I tried external Interrupts, they are helpfull to monitor (user-)input and react to them. The Interrupt Service Routine (ISR) is a callback function with 4 modes:\nLow: Interrupt is triggered if pin is low Change: Interrupt is triggered if pin state changes Rising: Interrupt is triggered if pin switches from low to high Falling: Interrupt is triggered if pin switches from high to low High: Interrupt is triggered if pin is high My idea of using external interrupts was to have two LEDs, of whom one is green and shows that everything works OK and the other one is red and starts blinking if there is a problem. In my case the \u0026ldquo;problem\u0026rdquo; gets triggered by a button, after which the green LED turns of and the red one start blinking. If the button gets pressed again the problem is \u0026ldquo;solved\u0026rdquo;, the red LED truns off and the green one is on again.\nHere you can see the code, I used the \u0026ldquo;change\u0026rdquo;- mode for the ISR:\nconst int ledPin1 = 12; //Grüne LED const int ledPin2 = 11; //Rote LED const int buttonPin = 2; //Interrupt Button int x=0, y=0; //Variablen zum Hochzählen int ledToggle1 = HIGH; //Zustand Grüne LED int ledToggle2 = LOW; // Zustand Rote LED für Interrupt //Variablen um timing der Interrupts festzustellen unsigned long button_time = 0; unsigned long last_button_time = 0; int ledState = LOW; //Zustand Rote LED für Blinken //Variable zum Blinken der Roten LED unsigned long previousMillis = 0; const long interval = 250; //Blink delay der Roten LED void button_ISR(){ button_time = millis(); //check to see if increment() was called in the last 250 milliseconds if (button_time - last_button_time \u0026gt; 250){ Serial.print(\u0026#34;Interrupt \u0026#34;); Serial.print(y++); Serial.println(); ledToggle1 = !ledToggle1; digitalWrite(ledPin1, ledToggle1); ledToggle2 = !ledToggle2; digitalWrite(ledPin2, ledToggle2); last_button_time = button_time; } } void setup() { pinMode(ledPin1, OUTPUT); pinMode(ledPin2, OUTPUT); pinMode(buttonPin, INPUT_PULLUP); Serial.begin(9600); attachInterrupt(digitalPinToInterrupt(buttonPin), button_ISR, CHANGE); digitalWrite(ledPin1, HIGH); } void loop(){ Serial.print(\u0026#34;loop \u0026#34; ); Serial.print(x++ ); Serial.println(); unsigned long currentMillis = millis(); if (y%2==1){ if (currentMillis - previousMillis \u0026gt;= interval) { // save the last time you blinked the LED previousMillis = currentMillis; // if the LED is off turn it on and vice-versa: if (ledState == LOW) { ledState = HIGH; } else { ledState = LOW; } // set the LED with the ledState of the variable: digitalWrite(ledPin2, ledState); } } } Circuit:\nHere you can see everything in action:\n","date":"6 December 2022","permalink":"/swh/posts/microcontroller/","section":"Posts","summary":"In the lecture parts of microcontrollers we got introduced to the Arduino-Ecosystem of boards and shields. Then we learned about board features, as well as the Arduino IDE and the basics of Serial Communication.","title":"Microcontroller"},{"content":"In the lecture part of the electrical engineering-lab we learned about the basic formulas and units of electrical engineering, how to use resistors and got introduced to some basic circuits like series- and parallel-circuits. We also got introduced in a lot of components which we might need later in our projects.\nLab # In the lab part we then put some of the principles we learned to practise.\nSoldering # First we soldered some components which was nothing new to me but still entertaning since my soldering-iron at home isn\u0026rsquo;t that advanced.\nThe row on the left and the two pins at the bottom are my soldering result.\nCircuit with voltag and current measurement # Next we built a small circuit and measured the voltage and current on it to calculate and plot the value of the resistor we used while changing the voltage.\nAs you can see in the picture above we accidentally burned a resistor.\nThe circuit was the following:\nVoltage is measured in parallel Current is measured in series In this picture you can see the multimeter measuring the current in series as well as the power supply in the back. Unfortunately we firstly plugged the multimeter wrong as you can see in the picture, we later realised it because we got wrong numbers in our plot of the resistance.\nThis part was nothing new for me either because i had electrical engineering in school for 3 years and also measure stuff at home for own projects.\nProject # I chose the project \u0026ldquo;rc-car\u0026rdquo; since I like to build rc-cars out of lego technic in my free time, I figured it would be an interesting challenge to built a car even more from scratch than with lego.\nIn the picture below you can see my first try on a circuit for a simple rc-car with left- and right-indicators.\nServo for steering DC-motor for acceleration (the circuit enables forward and backward driving as well as pwm control) 2 times 2 LEDs in series for the left- and the right-indicator Bluetooth-module for rc control via a phone ","date":"15 November 2022","permalink":"/swh/posts/electrical-engineering/","section":"Posts","summary":"In the lecture part of the electrical engineering-lab we learned about the basic formulas and units of electrical engineering, how to use resistors and got introduced to some basic circuits like series- and parallel-circuits.","title":"Electrical Engineering"},{"content":"Hey, I\u0026rsquo;m Jakob!\nI study Media Informatics at Ulm University in my 5th semester (at the time of this post). In my free time I like to do sports, build stuff out of wood and design my own Lego Technic RC-Cars.\nBy attending this subject I hope to extend my knowledge about microcontrollers and modeling in 3D. Furthermore I\u0026rsquo;m looking forward to learn how to use a 3D-Printer, CNC and a Laser-Cutter for the first time.\nI chose this subject because I\u0026rsquo;m generally interested building DIY stuff and for school I did a microcontroller-project in which i tried to build a RC-Car with automatic differential-locks. The car worked more or less and with this subject I hope to clear some difficulties I faced in this project.\nIf I had all the tools and abilitys I need, I would like to build a reciever to start my PC over my phone and a button build Into my desk which turns on my power strip via a relay as well as my PC simultaneously. All the stuff could be hidden underneath my small shelf on which my screens are standing behind a laser-cutted IO-shield\n","date":"5 November 2022","permalink":"/swh/posts/introduction/","section":"Posts","summary":"Hey, I\u0026rsquo;m Jakob!\nI study Media Informatics at Ulm University in my 5th semester (at the time of this post). In my free time I like to do sports, build stuff out of wood and design my own Lego Technic RC-Cars.","title":"First Post - Introduction"},{"content":"","date":"1 January 0001","permalink":"/swh/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/swh/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/swh/series/","section":"Series","summary":"","title":"Series"},{"content":"","date":"1 January 0001","permalink":"/swh/tags/","section":"Tags","summary":"","title":"Tags"}]